# Generated from grammar/HTMLLexer.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,5,66,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,26,8,1,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,2,41,8,2,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,58,8,3,1,4,
        4,4,61,8,4,11,4,12,4,62,1,4,1,4,0,0,5,1,1,3,2,5,3,7,4,9,5,1,0,1,
        3,0,9,10,13,13,32,32,69,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
        1,0,0,0,0,9,1,0,0,0,1,11,1,0,0,0,3,25,1,0,0,0,5,40,1,0,0,0,7,57,
        1,0,0,0,9,60,1,0,0,0,11,12,5,60,0,0,12,13,5,104,0,0,13,14,5,116,
        0,0,14,15,5,109,0,0,15,16,5,108,0,0,16,17,5,62,0,0,17,2,1,0,0,0,
        18,19,5,60,0,0,19,20,5,112,0,0,20,26,5,62,0,0,21,22,5,60,0,0,22,
        23,5,47,0,0,23,24,5,112,0,0,24,26,5,62,0,0,25,18,1,0,0,0,25,21,1,
        0,0,0,26,4,1,0,0,0,27,28,5,60,0,0,28,29,5,104,0,0,29,30,5,101,0,
        0,30,31,5,97,0,0,31,32,5,100,0,0,32,41,5,62,0,0,33,34,5,60,0,0,34,
        35,5,47,0,0,35,36,5,104,0,0,36,37,5,101,0,0,37,38,5,97,0,0,38,39,
        5,100,0,0,39,41,5,62,0,0,40,27,1,0,0,0,40,33,1,0,0,0,41,6,1,0,0,
        0,42,43,5,60,0,0,43,44,5,116,0,0,44,45,5,105,0,0,45,46,5,116,0,0,
        46,47,5,108,0,0,47,48,5,101,0,0,48,58,5,62,0,0,49,50,5,60,0,0,50,
        51,5,47,0,0,51,52,5,116,0,0,52,53,5,105,0,0,53,54,5,116,0,0,54,55,
        5,108,0,0,55,56,5,101,0,0,56,58,5,62,0,0,57,42,1,0,0,0,57,49,1,0,
        0,0,58,8,1,0,0,0,59,61,7,0,0,0,60,59,1,0,0,0,61,62,1,0,0,0,62,60,
        1,0,0,0,62,63,1,0,0,0,63,64,1,0,0,0,64,65,6,4,0,0,65,10,1,0,0,0,
        5,0,25,40,57,62,1,6,0,0
    ]

class HTMLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    HTML = 1
    P = 2
    HEAD = 3
    TITLE = 4
    WS = 5

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'<html>'" ]

    symbolicNames = [ "<INVALID>",
            "HTML", "P", "HEAD", "TITLE", "WS" ]

    ruleNames = [ "HTML", "P", "HEAD", "TITLE", "WS" ]

    grammarFileName = "HTMLLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


